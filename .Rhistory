View(OCN)
plot(OCN)
draw_simple_OCN(OCN)
?draw_simple_OCN
draw_thematic_OCN(OCN, OCN$AG$A)
?draw_thematic_OCN
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE)
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="none")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor=NULL)
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="white")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="black")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="brown")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="beige", riverColor="blue")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="mauve", riverColor="blue")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette="reds")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette="Reds")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette="RdBu")
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(palette="Reds"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(10, palette="Reds"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Reds"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Seismic"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Zissou"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Reds 3"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Blues 3"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Blues_r 3"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Blues_r"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Blues r"))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="Blues", rev=TRUE))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="RdBu", rev=TRUE))
draw_thematic_OCN(OCN, OCN$AG$A, drawNodes=TRUE, backgroundColor="tan", riverColor="blue", colPalette=hcl.colors(1000, palette="RdBu", rev=FALSE))
OCN$FD$W
OCN$FD$W
OCN$FD$W[1000:]
OCN$FD$W[1000:2000]
shape(OCN$FD$W)
ndim(OCN$FD$W)
?ndim
??ndim
dims(OCN$FD$W)
library(tidyverse)
dims(OCN$FD$W)
plyr::dims(OCN$FD$W)
OCN$FD$W
print(ig)
igraph
igraph::write.graph(ig, "test", "GraphML")
igraph::write_graph(ig, "test", "GraphML")
igraph::write_graph(ig, "/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/test", "GraphML")
igraph::write_graph(ig, "/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/test.graphml", "GraphML")
g <- OCN_to_igraph(OCN, level = "AG")
plot(g, layout = matrix(c(OCN$AG$X,OCN$AG$Y), ncol = 2, nrow = OCN$AG$nNodes))
plot(OCN)
OCN <- create_OCN(
dimX=10, dimY=40,
nOutlet=2,
outletSide=c("E", "W"),
outletPos=c(4, 33),
typeInitialState="T", #T, V, H
showIntermediatePlots=TRUE, nUpdates=20, easyDraw=TRUE,
displayUpdates=2,
# how long to keep the river network "hot"/plastic for
# initialNoCoolingPhase=0,
# how quickly to cool down/freeze the network once cooling starts.
# coolingRate=0.3,
) %>%
landscape_OCN() %>%
aggregate_OCN()
draw_simple_OCN(OCN)
draw_contour_OCN(OCN)
draw_elev2D_OCN(OCN)
draw_thematic_OCN(
OCN, OCN$AG$A,
drawNodes=TRUE,
backgroundColor="tan", riverColor="blue",
colPalette=hcl.colors(1000, palette="RdBu", rev=FALSE)
)
draw_subcatchments_OCN(OCN, colPalette = hcl.colors(5, "Viridis"))
g <- OCN_to_igraph(OCN, level = "AG")
plot(g, layout = matrix(c(OCN$AG$X,OCN$AG$Y), ncol = 2, nrow = OCN$AG$nNodes))
dem <- data_frame(X=OCN$FD$X, Y=OCN$FD$Y, Z=OCN$FD$Z)
View(dem)
data_frame(X=OCN$FD$X, Y=OCN$FD$Y, Z=OCN$FD$Z) %>% write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/test.csv")
draw_elev2D_OCN(OCN)
draw_simple_OCN(OCN)
g <- OCN_to_igraph(OCN, level = "FD")
plot(g, layout = matrix(c(OCN$AG$X,OCN$AG$Y), ncol = 2, nrow = OCN$AG$nNodes))
plot(g, layout = matrix(c(OCN$FD$X,OCN$FD$Y), ncol = 2, nrow = OCN$FD$nNodes))
plot(OCN)
plot(g, layout = matrix(c(OCN$FD$X,OCN$FD$Y), ncol = 2, nrow = OCN$FD$nNodes))
plot(g, layout = matrix(c(OCN$FD$X,OCN$FD$Y), nrow = OCN$FD$nNodes))
View(g)
g[[1]][[1]]
OCN_to_SSN(OCN)
OCN_to_AEM(OCN)
aem <- OCN_to_AEM(OCN)
plot(aem)
View(aem)
aem[["values"]]
View(OCN)
OCN$FD$downNode
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Node=1:length(OCN$FD$X),
DownStream=OCN$FD$downNode
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
Node=1:length(OCN$FD$X),
DownStream=OCN$FD$downNode
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
Node=1:length(OCN$FD$X),
DownNode=OCN$FD$downNode
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
OCN@RN[["downNode"]]
OCN@AG[["downNode"]]
max(OCN@AG[["downNode"]])
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
Node=1:length(OCN$FD$X) - 1,
DownNode=OCN$FD$downNode
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
Node=1:length(OCN$FD$X),
DownNode=OCN$FD$downNode
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
Node=1:length(OCN$FD$X) - 1,
DownNode=OCN$FD$downNode - 1
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
OCN@FD[["A"]]
perm[(which(perm==i) - FD$A[i] + 1):which(perm==i)]
perm=OCN$FD$perm
i=30
perm[(which(perm==i) - FD$A[i] + 1):which(perm==i)]
perm[(which(perm==i) - OCN$FD$A[i] + 1):which(perm==i)]
i=33
perm[(which(perm==i) - OCN$FD$A[i] + 1):which(perm==i)]
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
A=OCN$FD$A,
slope=OCN$FD$slope,
toSC=OCN$FD$toSC,
toCM=OCN$FD$toCM,
perm=OCN$FD$perm,
leng=OCN$FD$leng,
DownNode=OCN$FD$downNode - 1,
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
perm[(which(perm==i) - OCN$FD$A[i] + 1):which(perm==i)]
perm==1
perm==i
which(perm==i)
perm[(which(perm==i) - OCN$FD$A[i] + 1):which(perm==i)]
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
A=OCN$FD$A,
slope=OCN$FD$slope,
toSC=OCN$FD$toSC - 1,
toCM=OCN$FD$toCM - 1,
perm=OCN$FD$perm - 1,
leng=OCN$FD$leng,
DownNode=OCN$FD$downNode - 1,
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
(which(perm==i) - OCN$FD$A[i] + 1)
i
OCN$FD$A[i]
which(perm==i)
i
which(perm==i) - OCN$FD$A[i]
which(perm==i) - OCN$FD$A[i] + 1
which(perm == 33)
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
A=OCN$FD$A,
slope=OCN$FD$slope,
toSC=OCN$FD$toSC - 1,
toCM=OCN$FD$toCM - 1,
perm=OCN$FD$perm - 1,
leng=OCN$FD$leng,
DownNode=OCN$FD$downNode - 1,
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
which(perm == 33)
which(perm == 34)
A[33]
OCN$FD$A[33]
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
A=OCN$FD$A,
slope=OCN$FD$slope,
toSC=OCN$FD$toSC - 1,
toCM=OCN$FD$toCM - 1,
perm=OCN$FD$perm,
leng=OCN$FD$leng,
DownNode=OCN$FD$downNode - 1,
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
A=OCN$FD$A,
slope=OCN$FD$slope,
toSC=OCN$FD$toSC - 1,
toCM=OCN$FD$toCM - 1,
perm=OCN$FD$perm - 1,
leng=OCN$FD$leng,
DownNode=OCN$FD$downNode - 1,
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
which(perm==i) - OCN$FD$A[i] + 1
network <- data_frame(
X=OCN$FD$X,
Y=OCN$FD$Y,
Z=OCN$FD$Z,
A=OCN$FD$A,
slope=OCN$FD$slope,
toSC=OCN$FD$toSC - 1,
toCM=OCN$FD$toCM - 1,
toRN=OCN$FD$toRN - 1,
perm=OCN$FD$perm - 1,
leng=OCN$FD$leng,
DownNode=OCN$FD$downNode - 1,
) %>%
write_csv("/Users/alex/Documents/Work/ORNL/Projects/sensor-networks/testnetwork.csv")
OCN@FD[["toRN"]]
OCN@FD[["W"]]@rowpointers
OCN@FD[["W"]]@entries
data(OCNet::OCN_250)
library(OCNet)
data("OCN_250")
View(OCN)
force(OCN_250)
View(OCN_250)
data("OCN_250_hot")
force(OCN_250_hot)
View(OCN_250_hot)
OCN_250@slope0
ggplot(energy[1:frames[length(frames)]:100]) +
geom_line(aes(x=iter, y=cold), color="blue") +
geom_line(aes(x=iter, y=lw), color="orange") +
geom_line(aes(x=iter, y=hot), color="red")
library(OCNet)
library(tidyverse)
library(ggplot2)
ggplot(energy[1:frames[length(frames)]:100]) +
geom_line(aes(x=iter, y=cold), color="blue") +
geom_line(aes(x=iter, y=lw), color="orange") +
geom_line(aes(x=iter, y=hot), color="red")
library(OCNet)
library(tidyverse)
library(ggplot2)
source(paste(getwd(), "create_OCN_series.R", sep="/"))
setwd("~/Documents/Work/ORNL/Projects/sensor-networks")
library(OCNet)
library(tidyverse)
library(ggplot2)
source(paste(getwd(), "create_OCN_series.R", sep="/"))
dimX <- 500
dimY <- 500
cellsize <- 100
frames <- as.integer(seq(1, dimX*dimY*40, length.out=16))
frames <- sort(frames[!duplicated(frames)])
hot_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_hot$initialNoCoolingPhase,
coolingRate=OCN_250_hot$coolingRate,
typeInitialState="V",
saveEnergy=TRUE
)
cold_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_cold$initialNoCoolingPhase,
coolingRate=OCN_250_cold$coolingRate,
typeInitialState="V",
saveEnergy=TRUE
)
lw_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250$initialNoCoolingPhase,
coolingRate=OCN_250$coolingRate,
typeInitialState="V",
saveEnergy=TRUE
)
cold <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/500/cold"),
# progress=TRUE,
create_OCN_kwargs=cold_kwargs,
)
library(OCNet)
library(tidyverse)
library(ggplot2)
source(paste(getwd(), "create_OCN_series.R", sep="/"))
dimX <- 500
dimY <- 500
cellsize <- 100
frames <- as.integer(seq(1, dimX*dimY*40, length.out=16))
frames <- sort(frames[!duplicated(frames)])
hot_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_hot$initialNoCoolingPhase,
coolingRate=OCN_250_hot$coolingRate,
typeInitialState="V",
saveEnergy=TRUE
)
cold_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_cold$initialNoCoolingPhase,
coolingRate=OCN_250_cold$coolingRate,
typeInitialState="V",
saveEnergy=TRUE
)
lw_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250$initialNoCoolingPhase,
coolingRate=OCN_250$coolingRate,
typeInitialState="V",
saveEnergy=TRUE
)
cold <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/500/cold"),
# progress=TRUE,
create_OCN_kwargs=cold_kwargs,
)
library(OCNet)
library(tidyverse)
library(ggplot2)
source(paste(getwd(), "create_OCN_series.R", sep="/"))
dimX <- 500
dimY <- 500
cellsize <- 100
frames <- as.integer(seq(1, dimX*dimY*40, length.out=16))
frames <- sort(frames[!duplicated(frames)])
hot_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_hot$initialNoCoolingPhase,
coolingRate=OCN_250_hot$coolingRate,
typeInitialState="V",
saveEnergy=TRUE,
displayUpdates=1
)
cold_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_cold$initialNoCoolingPhase,
coolingRate=OCN_250_cold$coolingRate,
typeInitialState="V",
saveEnergy=TRUE,
displayUpdates=1
)
lw_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250$initialNoCoolingPhase,
coolingRate=OCN_250$coolingRate,
typeInitialState="V",
saveEnergy=TRUE,
displayUpdates=1
)
cold <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/500/cold"),
# progress=TRUE,
create_OCN_kwargs=cold_kwargs,
)
dimX <- 300
dimY <- 300
cellsize <- 166.6666667
frames <- as.integer(seq(1, dimX*dimY*40, length.out=16))
frames <- sort(frames[!duplicated(frames)])
hot_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_hot$initialNoCoolingPhase,
coolingRate=OCN_250_hot$coolingRate,
typeInitialState="V",
saveEnergy=TRUE,
displayUpdates=1
)
cold_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250_cold$initialNoCoolingPhase,
coolingRate=OCN_250_cold$coolingRate,
typeInitialState="V",
saveEnergy=TRUE,
displayUpdates=1
)
lw_kwargs <- list(
outletSide="S",
outletPos=dimX,
cellsize=cellsize,
initialNoCoolingPhase=OCN_250$initialNoCoolingPhase,
coolingRate=OCN_250$coolingRate,
typeInitialState="V",
saveEnergy=TRUE,
displayUpdates=1
)
cold <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/300/cold"),
# progress=TRUE,
create_OCN_kwargs=cold_kwargs,
)
setwd("~/Documents/Work/ORNL/Projects/sensor-networks")
cold <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/300/cold"),
# progress=TRUE,
create_OCN_kwargs=cold_kwargs,
)
hot <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/300/hot"),
# progress=TRUE,
create_OCN_kwargs=hot_kwargs
)
lw <- create_OCN_series(
dimX,
dimY,
frames,
cores=8,
return_OCNs="last",
out_dir=paste0(getwd(), "/dems/300/lw"),
# progress=TRUE,
create_OCN_kwargs=lw_kwargs
)
frame_energy <- data.frame(iter=frames, cold=cold$energy[frames], lw=lw$energy[frames], hot=hot$energy[frames])
write_csv(frame_energy, paste0(getwd(), "/dems/300/frame_energy.csv"))
energy <- data.frame(iter=1:frames[length(frames)], cold=cold$energy, lw=lw$energy, hot=hot$energy)
write_csv(energy, paste0(getwd(), "/dems/300/energy.csv"))
ggplot(energy[1:frames[length(frames)]:100]) +
geom_line(aes(x=iter, y=cold), color="blue") +
geom_line(aes(x=iter, y=lw), color="orange") +
geom_line(aes(x=iter, y=hot), color="red")
